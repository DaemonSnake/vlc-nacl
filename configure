#!/bin/sh

SRC_DIR=$(dirname `readlink -f $0`)
cd ${SRC_DIR}

msg() {
    echo "configure: $*"
}
step_msg() {
    msg
    msg "$1"
    msg
}

checkfail()
{
    if [ ! $? -eq 0 ];then
        msg "$1"
        exit 1
    fi
}

CLOBBER_VLC=1
PATCH_VLC=1

while [ $# -gt 0 ]; do
    case $1 in
        help|--help)
            echo "Initializes and patches the VLC submodule"
            echo "Use --no-clobber to disable clobbering and checkingout VLC"
            echo "Use --no-patch to prevent any patching"
            exit 1
            ;;
        --no-clobber)
            CLOBBER_VLC=0
            ;;
        --no-patch)
            PATCH_VLC=0
            ;;
    esac
    shift
done

if [ $CLOBBER_VLC -ne 0 ]
then
    msg "git: submodule sync"
    git submodule sync

    msg "git: submodule init"
    git submodule init

    msg "git: submodule update"
    git submodule update
    checkfail "git failed"

    msg "git: submodule foreach sync"
    git submodule foreach --recursive 'if test -e .gitmodules; then git submodule sync; fi'
    checkfail "git failed"

    msg "git: submodule foreach update"
    git submodule update --recursive
    checkfail "git failed"

    # NB: this is just for the sake of getting the submodule SHA1 values
    # and status written into the build log.
    msg "git: submodule status"
    git submodule status --recursive

    msg "git: submodule clobber"
    git submodule foreach --recursive git clean -dxf
    checkfail "git failed"
    git submodule foreach --recursive git checkout .
    checkfail "git failed"
fi

if [ $PATCH_VLC -ne 0 ]
then
    msg "Patching"
    cd ${SRC_DIR}/vlc

    for patch in `echo ${SRC_DIR}/patches/* | sort`;
    do
        git am $patch
        checkfail "failed to apply patch"
    done

    cd ${SRC_DIR}
fi

step_msg "Done!"
