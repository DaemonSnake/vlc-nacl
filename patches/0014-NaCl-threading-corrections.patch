From a9f377c8e15efcf77f342e52c85e5636d917d62f Mon Sep 17 00:00:00 2001
From: Richard Diamond <wichard@vitalitystudios.com>
Date: Thu, 24 Mar 2016 21:08:08 -0500
Subject: [PATCH] NaCl threading corrections.

---
 src/nacl/cond.c   | 4 ++--
 src/nacl/rwlock.c | 8 ++++----
 src/nacl/thread.c | 4 ++++
 src/nacl/thread.h | 4 ----
 4 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/src/nacl/cond.c b/src/nacl/cond.c
index 405423b..c6ffc49 100644
--- a/src/nacl/cond.c
+++ b/src/nacl/cond.c
@@ -88,10 +88,10 @@ void vlc_cond_wait(vlc_cond_t* condvar, vlc_mutex_t* mutex) {
 }
 
 int vlc_cond_timedwait(vlc_cond_t* condvar, vlc_mutex_t* mutex, mtime_t deadline) {
-  vlc_clock_setup();
+  clock_setup();
   /* If the deadline is already elapsed, or within the clock precision,
    * do not even bother the system timer. */
-  deadline -= clock_prec;
+  deadline -= vlc_clock_prec;
   deadline -= mdate();
 
   /* deadline is now relative */
diff --git a/src/nacl/rwlock.c b/src/nacl/rwlock.c
index 0397047..f7b9a3c 100644
--- a/src/nacl/rwlock.c
+++ b/src/nacl/rwlock.c
@@ -33,22 +33,22 @@ void vlc_rwlock_init(vlc_rwlock_t* lock) {
   VLC_THREAD_ASSERT("initializing R/W lock");
 }
 
-void vlc_rwlock_destroy (vlc_rwlock_t* lock) {
+void vlc_rwlock_destroy(vlc_rwlock_t* lock) {
   const int val = pthread_rwlock_destroy(lock);
   VLC_THREAD_ASSERT("destroying R/W lock");
 }
 
-void vlc_rwlock_rdlock (vlc_rwlock_t* lock) {
+void vlc_rwlock_rdlock(vlc_rwlock_t* lock) {
   const int val = pthread_rwlock_rdlock(lock);
   VLC_THREAD_ASSERT("acquiring R/W lock for reading");
 }
 
-void vlc_rwlock_wrlock (vlc_rwlock_t* lock) {
+void vlc_rwlock_wrlock(vlc_rwlock_t* lock) {
   const int val = pthread_rwlock_wrlock(lock);
   VLC_THREAD_ASSERT("acquiring R/W lock for writing");
 }
 
-void vlc_rwlock_unlock (vlc_rwlock_t* lock) {
+void vlc_rwlock_unlock(vlc_rwlock_t* lock) {
   const int val = pthread_rwlock_unlock(lock);
   VLC_THREAD_ASSERT("releasing R/W lock");
 }
diff --git a/src/nacl/thread.c b/src/nacl/thread.c
index 4dd6ccb..705f7a0 100644
--- a/src/nacl/thread.c
+++ b/src/nacl/thread.c
@@ -28,6 +28,10 @@
 
 #include "thread.h"
 
+void vlc_threads_setup(libvlc_int_t* libvlc) {
+  VLC_UNUSED(libvlc);
+}
+
 // thread creation:
 
 static void detached_thread_cleanup(void* data) {
diff --git a/src/nacl/thread.h b/src/nacl/thread.h
index 0cac5a6..b587057 100644
--- a/src/nacl/thread.h
+++ b/src/nacl/thread.h
@@ -84,10 +84,6 @@ static void vlc_thread_fatal(const char* action, const int error,
 # define VLC_THREAD_ASSERT(action) ((void)val)
 #endif
 
-void vlc_threads_setup(libvlc_int_t* libvlc) {
-  VLC_UNUSED(libvlc);
-}
-
 static inline struct timespec mtime_to_ts(const mtime_t date) {
   const lldiv_t d = lldiv(date, CLOCK_FREQ);
   const struct timespec ts = { d.quot, d.rem * (1000000000 / CLOCK_FREQ) };
-- 
2.5.0

